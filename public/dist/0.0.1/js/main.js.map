{
  "version": 3,
  "sources": ["../../../../src/client/views/loader-page.js", "../../../../node_modules/@azizka/i18n/src/utils.js", "../../../../node_modules/@azizka/i18n/src/translator.js", "../../../../node_modules/@azizka/i18n/index.js", "../../../../src/client/views/layouts/default-layout.js", "../../../../src/client/helpers/view-helpers.js", "../../../../src/client/main.js"],
  "sourcesContent": ["class LoaderPage {\n  static page = null;\n\n  node = null;\n\n  static get instance() {\n    if(!LoaderPage.page) {\n      LoaderPage.page = new LoaderPage();\n    }\n\n    return LoaderPage.page;\n  }\n\n  get elem() {\n    return this.node;\n  }\n\n  async init(parent, firstTime) {\n    let content = parent || document.body;\n\n    this.node = content.querySelector('[data-page=\"loader-page\"]');\n\n    return content;\n  }\n}\n\nmodule.exports = {\n  LoaderPage\n};\n", "function isObject(obj) {\n  const type = typeof obj;\n\n  return type === 'function' ||\n    (type === 'object' && !!obj);\n}\n\nmodule.exports = {\n  isObject\n};\n", "const { isObject } = require('./utils');\n\nclass Translator {\n  data;\n  globalContext;\n\n  extension;\n\n  constructor() {\n    this.resetContext();\n  }\n\n  static create(data) {\n    const translator = new Translator();\n\n    translator.add(data);\n\n    return translator;\n  }\n\n  translate(text, defaultNumOrFormatting, numOrFormattingOrContext, formattingOrContext) {\n    let num = undefined;\n    let formatting = undefined;\n    let context = this.globalContext;\n\n    if(isObject(defaultNumOrFormatting)) {\n      formatting = defaultNumOrFormatting;\n\n      if(isObject(numOrFormattingOrContext)) {\n        context = numOrFormattingOrContext;\n      }\n    } else if(typeof defaultNumOrFormatting === 'number') {\n      num = defaultNumOrFormatting;\n      formatting = numOrFormattingOrContext;\n\n      if(formattingOrContext) {\n        context = formattingOrContext;\n      }\n    } else {\n      if(typeof numOrFormattingOrContext === 'number') {\n        num = numOrFormattingOrContext;\n        formatting = formattingOrContext;\n      } else {\n        formatting = numOrFormattingOrContext;\n        \n        if(formattingOrContext) {\n          context = formattingOrContext;\n        }\n      }\n    }\n\n    return this.translateText(text, num, formatting, context);\n  }\n\n  add(data) {\n    if(!this.data) {\n      this.data = data;\n    } else {\n      if(data.values && this.data.values) {\n        for(const key of Object.keys(data.values)) {\n          this.data.values[key] = data.values[key];\n        }\n      }\n  \n      if(data.contexts && this.data.contexts) {\n        for(const context of data.contexts) {\n          this.data.contexts.push(context);\n        }\n      }\n    }\n  }\n\n  setContext(key, value) {\n    his.globalContext[key] = value;\n  }\n\n  extend(extension) {\n    this.extension = extension;\n  }\n\n  clearContext(key) {\n    delete this.globalContext[key];\n  }\n\n  reset() {\n    this.resetData();\n    this.resetContext();\n  }\n\n  resetData() {\n    this.data = {\n      values: {},\n      contexts: []\n    };\n  }\n\n  resetContext() {\n    this.globalContext = {};\n  }\n\n  translateText(text, num, formatting, context) {\n    context = context || this.globalContext;\n\n    if(!this.data) {\n      return this.useOriginalText('' + text, num, formatting);\n    }\n\n    const contextData = this.getContextData(this.data, context);\n\n    let result = null;\n\n    if(contextData) {\n      result = this.findTranslation(text, num, formatting, contextData?.values);\n    }\n\n    if(result === null) {\n      result = this.findTranslation(text, num, formatting, this.data.values);\n    } \n\n    if(result === null)  {\n      result = this.useOriginalText('' + text, num, formatting);\n    }\n\n    return result;  \n  }\n\n  findTranslation(text, num, formatting, data) {\n    let value = data?.[text];\n\n    if(value === undefined) {\n      return null;\n    }\n\n    if(typeof value === 'object' && !Array.isArray(value)) {\n      if(this.extension) {\n        value = '' + this.extension(text, num, formatting, value);\n        value = this.applyNumbers(value, num || 0);\n\n        return this.applyFormatting(value, formatting);\n      } else {\n        return this.useOriginalText('' + text, num, formatting);\n      }\n    }  \n\n    if(num === undefined && typeof value === 'string') {\n      return this.applyFormatting(value, formatting);\n    } else if(value instanceof Array) {               \n      for(const triple of value) {\n        if(\n          num === undefined && triple[0] === null && triple[1] === null || \n          num !== undefined && (\n            triple[0] !== null && num >= triple[0] && (triple[1] === null || num <= triple[1]) || \n            triple[0] === null && triple[1] && num <= triple[1]\n          )\n        ) {\n          const numVal = num || 0;\n          const textVal = '' + (triple[2] ?? '');          \n\n          const result = this.applyNumbers(textVal, numVal);\n\n          return this.applyFormatting(result, formatting);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  applyNumbers(str, num) {\n    str = str.replace('-%n', '' + -num);\n    str = str.replace('%n', '' + num);\n\n    return str;\n  }\n\n  applyFormatting(text, formatting) {\n    if(formatting) {\n      for(const key of Object.keys(formatting)) {\n        const regex = new RegExp(`%{${key}}`, 'g');\n        text = text.replace(regex, formatting[key]);\n      }\n    }\n\n    return text;\n  }\n\n  getContextData(data, context) {\n    if(!data.contexts) {\n      return null;\n    }\n\n    for(const ctx of data.contexts) {\n      let equal = true;\n\n      for(const key of Object.keys(ctx.matches)) {\n        const value = ctx.matches[key];\n\n        equal = equal && value === context[key];\n      }\n\n      if(equal) {\n        return ctx;\n      }\n    }\n\n    return null;\n  }\n\n  useOriginalText(text, num, formatting) {\n    if(num === undefined) {\n      return this.applyFormatting(text, formatting);\n    }\n\n    return this.applyFormatting(text.replace('%n', '' + num), formatting);\n  }\n}\n\n\nmodule.exports = {\n  Translator\n};\n", "const { Translator } = require('./src/translator');\n\nconst { isObject } = require('./src/utils');\n\nmodule.exports = {\n  Translator,\n  isObject\n};\n", "const { BaseLayout } = require('./base-layout');\n\nclass DefaultLayout extends BaseLayout {\n  static layout = null;    \n\n  static get instance() {\n    if(!DefaultLayout.layout) {\n      DefaultLayout.layout = new DefaultLayout();\n    }\n\n    return DefaultLayout.layout;\n  }  \n}\n\nmodule.exports = {\n  DefaultLayout\n};\n", "const { Translator } = require('@azizka/i18n');\n\nconst { DefaultLayout } = require('../views/layouts/default-layout');\n\nconst { LoaderPage } = require('../views/loader-page');\n\nconst { toCamel } = require('../../utils');\n\nconst { layouts, views, context, languages } = require('../globals');\n\nfunction hideSplash() {\n  const splashElem = document.querySelector('.splash');\n\n  splashElem?.classList.remove('splash-open');\n}\n\nfunction getExistingLayout(layoutNames) {\n  const reverseLayouts = [...layoutNames].reverse();\n\n  let layout = DefaultLayout.instance;\n\n  for(const layoutName of reverseLayouts) {\n    if(!(layoutName in layouts) || layout.content !== layouts[layoutName]) {    \n      break;\n    }\n\n    layout = layouts[layoutName];\n  }\n\n  return layout;\n}\n\nasync function initLayouts(layoutNames, parent, firstTime) {\n  const firstLoad = {};\n\n  for(const layoutName of layoutNames) {\n    if(!(layoutName in layouts)) {\n      const module = await import(`./views/layouts/${layoutName}.js?time=${Date.now()}`);\n\n      parent = await module.default[toCamel(layoutName)]?.instance?.init?.(parent, firstTime);\n\n      layouts[layoutName] = module.default[toCamel(layoutName)]?.instance;\n\n      firstLoad[layoutName] = true;\n    }\n  }\n\n  return firstLoad;\n}\n\nasync function loadLayouts(lang, page, layoutNames, firstLoad) {\n  const reverseLayouts = [...layoutNames].reverse();\n\n  let parentLayout = DefaultLayout.instance;\n  \n  for(const layoutName of reverseLayouts) {\n    if(parentLayout['content'] !== layouts[layoutName]) {\n      await parentLayout.replaceContent(layouts[layoutName]);\n    }\n\n    await layouts[layoutName].load?.(lang, page, firstLoad[layoutName] ?? false);\n\n    parentLayout = layouts[layoutName];\n  } \n  \n  return parentLayout;\n}\n\nasync function loadPage(lang, page, name, layoutNames, firstTime) {\n  context.page = page;\n\n  let parent = null;\n\n  let pageFirstLoad = false;\n\n  if(!firstTime && (!(lang in languages) || !(name in views))) {\n    const layout = getExistingLayout(layoutNames);\n\n    if(layout['content'] !== LoaderPage.instance) {\n      await layout.replaceContent(LoaderPage.instance);\n    }\n  } \n\n  if(!(lang in languages)) {\n    const module = await import(`./locales/${lang}.js?time=${Date.now()}`);\n\n    languages[lang] = Translator.create(module.default);\n  }\n\n  context.tr = languages[lang].translate.bind(languages[lang]);\n\n  document.documentElement.lang = lang;\n  document.title = context.tr('My Routes');\n\n  if(!(name in views)) {       \n    const module = await import(`./views/${name}.js?time=${Date.now()}`);\n\n    parent = await module.default[toCamel(name)]?.instance?.init?.(parent, firstTime);\n\n    views[name] = module.default[toCamel(name)]?.instance;\n\n    pageFirstLoad = true;\n  }\n\n  const firstLoad = await initLayouts(layoutNames, parent, firstTime);\n\n  if(context.page.fragment === page.fragment) {\n    const layout = await loadLayouts(lang, page, layoutNames, firstLoad);    \n\n    if(layout['content'] !== views[name]) {\n      await layout.replaceContent(views[name]);\n    }\n\n    await views[name].load?.(lang, page, pageFirstLoad);\n  }\n\n  if(firstTime) {\n    hideSplash();\n  }\n}\n\nmodule.exports = {\n  hideSplash,\n\n  getExistingLayout,\n  \n  initLayouts,\n  loadLayouts,\n\n  loadPage\n};\n", "const { LoaderPage } = require('./views/loader-page');\n\nconst { loadPage } = require('./helpers/view-helpers');\n\nconst { localeRoute } = require('../utils');\n\n\nconst { router, routeNavigator } = require('./globals');\nconst { DEFAULT_LANGUAGE } = require('../globals');\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  let firstTime = true;    \n\n  LoaderPage.instance.init(null, firstTime);\n\n  router.addRoutes([{\n    rule: `${localeRoute}/?`,\n    async handler(page) {\n      await loadPage(\n        page.match?.[0] || DEFAULT_LANGUAGE,\n        page, 'home-page', \n        ['main-layout'],\n        firstTime\n      );\n    }\n  }, {\n    rule: `${localeRoute}/?sign-in`,\n    async handler(page) {\n      await loadPage(\n        page.match?.[0] || DEFAULT_LANGUAGE,\n        page, \n        'sign-in-page', \n        [], \n        firstTime\n      );\n    }\n  }, {\n    rule: `${localeRoute}/?sign-up`,\n    async handler(page) {\n      await loadPage(\n        page.match?.[0] || DEFAULT_LANGUAGE,\n        page, \n        'sign-up-page', \n        [], \n        firstTime\n      );\n    }\n  }]);\n\n  routeNavigator.addUriListener();\n\n  router\n    .processUrl(routeNavigator.fragment, routeNavigator.query)\n    .catch(\n      reason => console.error(reason)      \n    )\n    .finally(() => firstTime = false);\n});\n"],
  "mappings": "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",
  "names": []
}
